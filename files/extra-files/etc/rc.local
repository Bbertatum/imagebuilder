#!/bin/sh
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

# flash based storage does not need scheduling
if [ -d /sys/block/mmcblk0 ] || [ -d /sys/block/mmcblk1 ] || [ -d /sys/block/mmcblk2 ]; then
  for i in /sys/block/mmcblk?/queue/scheduler; do
    # older and newer kernel differ here: old noop, new none
    grep -q none $i
    if [ "$?" = "0" ]; then
      echo none > $i
    else
      echo noop > $i
    fi
  done
fi
if [ -d /sys/block/sda ] || [ -d /sys/block/sdb ] || [ -d /sys/block/sdc ]; then
  for i in /sys/block/sd?/queue/scheduler; do
    # older and newer kernel differ here: old noop, new none
    grep -q none $i
    if [ "$?" = "0" ]; then
      echo none > $i
    else
      echo noop > $i
    fi
  done
fi

# do the zswap setup only if zswap is around
if [ -f /sys/module/zswap/parameters/enabled ]; then
  # do some low memory optimization by using zswap memory compression
  echo zstd > /sys/module/zswap/parameters/compressor 
  echo z3fold > /sys/module/zswap/parameters/zpool
  # default is 20, less means less compressed memory and less cpu usage
  # for compression, more is the other way around, depends on actual hw
  # with 20 there is a 25-30% win on available memory with a typical
  # usual compression ratio of close to 1:3, but only compressed pages
  # are written to the swap space and thus io to emmc/sd is reduced
  # which should be good for the emmc/sd life time as well - this seems
  # to be some kind of a sweet spot for running low performance systems
  # for a longer time without being busy compressing/decompressing the
  # memory all the time ... in some situations up to 35 might be ok, it
  # should be easier to raise the percentage the faster the cpu cores
  # are and the more of them are available ... it is a good idea to set
  # the size of the swap space to about 150% of the physical memory if
  # enough disk space is available (otherwise 100% is ok too) as with
  # zswap the used swap space is partially counted virtually twice for
  # compressed pages swapped out to disk (i.e. not really all shown
  # amount of used swap space is really used on disk, but shown this
  # way to user space tools
  echo 20 > /sys/module/zswap/parameters/max_pool_percent
  echo 1 > /sys/module/zswap/parameters/enabled
fi

# if the mglru patches are in place, then setting this might be good
# for interactive usage as a thrashing prevention
if [ -f /sys/kernel/mm/lru_gen/min_ttl_ms ]; then
  echo 1000 > /sys/kernel/mm/lru_gen/min_ttl_ms
fi

# see: https://forum.armbian.com/topic/20018-mglru-patches-to-bring-down-kswapd-cpu-usage/?do=findComment&comment=141847
if [ -f /proc/sys/vm/watermark_boost_factor ]; then
  echo 0 > /proc/sys/vm/watermark_boost_factor
fi

# ... and offer an option to disable them as their functionality is
# enabled by default if they are in use
#if [ -f /sys/kernel/mm/lru_gen/enabled ]; then
#  echo 0 > /sys/kernel/mm/lru_gen/enabled
#fi
